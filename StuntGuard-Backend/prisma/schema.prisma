datasource db {
    provider = "mysql"
    url = env("DB_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Child {
  child_id       String @id @db.Char(16) @default(nanoid(16))
  parent_id      String @db.Char(16)
  child_name     String @db.VarChar(255)
  child_gender   Boolean
  birth_date      DateTime
  child_age      Int
  birth_weight    Float
  birth_height    Float
  breastfeeding  Boolean
  created_at     DateTime @default(now()) @db.Timestamp(0)
  updated_at     DateTime @updatedAt @db.Timestamp(0)

  parent         Parent @relation(fields: [parent_id], references: [parent_id], onDelete: Restrict, onUpdate: Restrict)
  stuntPredict   StuntPredict[]
  recommendation Recommendation[]
}

model Parent {
  parent_id     String @id @db.Char(16) @default(nanoid(16))
  parent_name   String @db.VarChar(255)
  email          String @db.VarChar(200) @unique
  phone          String @db.VarChar(13)
  password       String @db.VarChar(255)
  created_at     DateTime @default(now()) @db.Timestamp(0)
  updated_at     DateTime @updatedAt @db.Timestamp(0)

  children       Child[]
}

model StuntPredict {
  predict_id     String @id @db.VarChar(8)
  child_weight   Float
  child_height   Float
  predict_result Boolean
  protein        Float
  energy         Float  
  child_id       String @db.Char(16)
  created_at     DateTime @default(now()) @db.Timestamp(0)
  updated_at     DateTime @updatedAt @db.Timestamp(0)
  note           String?   @db.Text

  child          Child @relation(fields: [child_id], references: [child_id], onDelete: Restrict, onUpdate: Restrict)
  recommendation Recommendation[]
}

model Recommendation {
  recommendation_id String @id @db.VarChar(8)
  child_id          String @db.Char(16)
  predict_id        String @db.VarChar(8)
  created_at        DateTime @default(now()) @db.Timestamp(0)
  updated_at        DateTime @updatedAt @db.Timestamp(0)

  child             Child @relation(fields: [child_id], references: [child_id], onDelete: Restrict, onUpdate: Restrict)
  stuntredict       StuntPredict @relation(fields: [predict_id], references: [predict_id], onDelete: Restrict, onUpdate: Restrict)
  food_details      FoodDetails[]
}

model FoodDetails {
  food_id           String   @id @db.Char(16) @default(nanoid(8))
  food_name         String   @db.VarChar(255)
  category          String   @db.VarChar(255)
  portion           Int
  unit              String   @db.VarChar(255)
  calories          Float
  fat               Float
  saturated_fat     Float
  polyunsaturated_fat Float
  monounsaturated_fat Float
  cholesterol       Float
  protein           Float
  carbohydrates     Float
  fiber             Float
  sugar             Float
  sodium            Float
  potassium         Float
  recommendation_id String   @db.Char(16)
  created_at        DateTime @default(now()) @db.Timestamp(0)

  recommendation    Recommendation @relation(fields: [recommendation_id], references: [recommendation_id], onDelete: Restrict, onUpdate: Restrict)
}

